#
# Automate system preferences on macOS.
#

# Close System Preferences to prevent it from overriding settings.
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront.
sudo -v

# Keep-alive: update existing `sudo` time stamp until this script has finished.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

#
# General UI/UX
#

# Menu bar: show battery percentage
#defaults write com.apple.menuextra.battery ShowPercent YES

# Show scrollbars (Possible values: `Automatic` / `WhenScrolling` / `Always`)
defaults write NSGlobalDomain AppleShowScrollBars -string "Automatic"

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Automatically quit printer app once the print jobs complete
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Disable automatic termination of inactive apps
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

# Disable the crash reporter
#defaults write com.apple.CrashReporter DialogType -string "none"

# Enable Crash Reporting as Notifications
# This does not disable the Crash Reporter dialog windows, and it has no impact
# on crash logs themselves, it simply transforms the crash alert into a
# Notification. If you click on the crash report notification, the regular Mac
# crash report screen will open as usual. Return to the default change 1 to 0
defaults write com.apple.CrashReporter UseUNC 1

# Set Help Viewer windows to non-floating mode
defaults write com.apple.helpviewer DevMode -bool true

# Disable classic Mac boot chime (re-enable by changing %01 to %00)
sudo nvram StartupMute=%01

#
# Finder & Desktop
#

#Set sidebar width (default 172)
defaults write com.apple.finder SidebarWidth -int 192

# Enable AirDrop on all interfaces
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

# Finder: show hidden files by default
defaults write com.apple.finder AppleShowAllFiles -bool true

# Start the status bar Path at `${HOME}` instead of Hard Drive
sudo defaults write /Library/Preferences/com.apple.finder PathBarRootAtHome -bool YES

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar (breadcrumb)
defaults write com.apple.finder ShowPathbar -bool true

# Finder: allow text selection in Quick Look/Preview in Finder by default
defaults write com.apple.finder QLEnableTextSelection -bool true

# Enable spring loading for directories
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

# Remove the spring loading delay for directories
defaults write NSGlobalDomain com.apple.springing.delay -float 0.1

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Automatically open a new Finder window when a volume is mounted
#defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
#defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
#defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

# Show item info to the right of the icons on the desktop
/usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

# Show item info near icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

# Enable snap-to-grid for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

# Expand the following File Info panes: 'General', 'Open with', and 'Sharing & Permissions'
defaults write com.apple.finder FXInfoPanesExpanded -dict-add "General" -bool true
defaults write com.apple.finder FXInfoPanesExpanded -dict-add "MetaData" -bool false
defaults write com.apple.finder FXInfoPanesExpanded -dict-add "OpenWith" -bool true
defaults write com.apple.finder FXInfoPanesExpanded -dict-add "Privileges" -bool true

#
# Finder Preferences
#

# Do not show icons on desktop for external Hard Drives, internal Hard Drive,
# servers and removable media
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false

# Set Projects as the default location for new Finder windows
# "PfDe" => Desktop
# "PfDo" => Documents
# "PfHm" => Home
# For other paths, use `PfLo` and `file:///full/path/here/`
defaults write com.apple.finder NewWindowTarget -string "PfLo"
defaults write com.apple.finder NewWindowTargetPath -string "file:///${HOME}/Library/Mobile%20Documents/com~apple~CloudDocs/Projects"

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Disable the warning before emptying the Trash
defaults write com.apple.finder WarnOnEmptyTrash -bool false

# Keep folders on top when sorting by name
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Use list view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# Show the `~/Library` folder
chflags nohidden ~/Library

# Show the `/Volumes` folder
sudo chflags nohidden /Volumes

# Expand the following File Info panes:
# “General”, “Open with”, and “Sharing & Permissions”
defaults write com.apple.finder FXInfoPanesExpanded -dict \
  General -bool true \
  OpenWith -bool true \
  Privileges -bool true

#
# Screenshots
#

# Save screenshots to the desktop
defaults write com.apple.screencapture location -string "${HOME}/Screenshots"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

# Disable shadow in screenshots
defaults write com.apple.screencapture disable-shadow -bool true

#
# Mission Control
#

# Don’t group windows by application in Mission Control
defaults write com.apple.dock expose-group-by-app -bool false

# Auto backup
#defaults write com.apple.TimeMachine AutoBackup =1

# Backup frequency
# default => 3600 seconds (every hour)
# 1800    => 1/2 hour
# 7200    => 2 hours
#sudo defaults write /System/Library/Launch Daemons/com.apple.backupd-auto StartInterval -int 1800

#
# Photos
#

# Prevent Photos from opening automatically when devices are plugged in
defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

#
# keyboard
#

# Automatically illuminate built-in MacBook keyboard in low light
defaults write com.apple.BezelServices kDim -bool true

# Turn off keyboard illumination when computer is not used for 1 minute
defaults write com.apple.BezelServices kDimTime -int 60

# Enable press-and-hold for keys (no key repeat)
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool true

# Enable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool true

# Disable automatic capitalization as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Disable automatic period substitution as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Display ASCII control characters using caret notation in standard text views
# Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

#
# WebKit
#

# Prevent Safari from opening ‘safe’ files automatically after downloading
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

# Enable the Develop menu and the Web Inspector in Safari
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

# Add a context menu item for showing the Web Inspector in web views
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

# Enable continuous spellchecking
defaults write com.apple.Safari WebContinuousSpellCheckingEnabled -bool true

# Disable auto-correct
#defaults write com.apple.Safari WebAutomaticSpellingCorrectionEnabled -bool false

# AutoFill
defaults write com.apple.Safari AutoFillFromAddressBook -bool true
defaults write com.apple.Safari AutoFillPasswords -bool true
defaults write com.apple.Safari AutoFillCreditCardData -bool false
defaults write com.apple.Safari AutoFillMiscellaneousForms -bool false

# Warn about fraudulent websites
defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true

# Block pop-up windows
defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false

# Enable “Do Not Track”
defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true

# Update extensions automatically
defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true

# Show the Debug Menu change 1 to 0 to hidden again
defaults write com.apple.Safari IncludeInternalDebugMenu 1

#
# Mail
#

# Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false

# Disable inline attachments (just show the icons)
defaults write com.apple.mail DisableInlineAttachmentViewing -bool true

# Automatically check for new message (not every 5 minutes)
defaults write com.apple.mail AutoFetch -bool true
defaults write com.apple.mail PollTime -string "-1"

# Show most recent message at the top in conversations
defaults write com.apple.mail ConversationViewSortDescending -bool true

#
# Dock
#

# Set the icon size of Dock items to 60 pixels
defaults write com.apple.dock tilesize -int 60

# Change minimize/maximize window effect
#defaults write com.apple.dock mineffect -string "scale"

# Minimize windows into their application’s icon
defaults write com.apple.dock minimize-to-application -bool true

# Enable spring loading for all Dock items
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

# Show indicator lights for open applications in the Dock
defaults write com.apple.dock show-process-indicators -bool true

# Don’t animate opening applications from the Dock
defaults write com.apple.dock launchanim -bool false

# Don’t automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Don't show recently used applications in the Dock
defaults write com.apple.dock show-recents -bool false

# Wipe all default icons from the Dock then add and reorders the new ones
defaults write com.apple.dock persistent-apps -array

# Discord
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Discord.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Slack
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Slack.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Mail
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Mail.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Calendar
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Calendar.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Reminders
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Reminders.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Notes
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Notes.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Calculator
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Calculator.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Safari
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Safari.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Google Chrome
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Google Chrome.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Visual Studio Code
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Visual Studio Code.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
# Figma
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Figma.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'

#
# TextEdit
#

# Use plain text mode for new TextEdit documents
defaults write com.apple.TextEdit RichText -int 0

# Open and save files as UTF-8 in TextEdit
defaults write com.apple.TextEdit PlainTextEncoding -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

#
# Screen
#

# Enable subpixel font rendering on non-Apple LCDs
# This is mostly needed for non-Apple displays.
# 0 => off
# 1 => light
# 2 => Medium/flat panel
# 3 => strong/blurred
defaults write -g AppleFontSmoothing -int 2

# Enable HiDPI display modes (requires restart)
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

#
# Xcode
#

# Disable anti-aliasing text inside Xcode (re-enable by changing YES to NO)
defaults write com.apple.dt.Xcode SourceEditorDisableAntialiasing -bool YES

#
# Activity Monitor
#

# Show the main window when launching Activity Monitor
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

# Visualize CPU usage in the Activity Monitor Dock icon
defaults write com.apple.ActivityMonitor IconType -int 5

# Show all processes hierarchically
defaults write com.apple.ActivityMonitor ShowCategory -int 101

# Sort Activity Monitor results by CPU usage
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection -int 0

# Default to showing the Memory tab
defaults write com.apple.ActivityMonitor SelectedTab -int 1

#
# Disk Utility
#

# Show a Debug menu in Disk Utility
defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true

# Enables additional disk image options
defaults write com.apple.DiskUtility advanced-image-options -bool true

# Shows all partitions for a disk in the main list
defaults write com.apple.DiskUtility DUShowEveryPartition -bool true

# Skip checksum verification for images on remote volumes
#defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

# Skip checksum verification for images on locked volumes
#defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true

# Allows Disk Images As RAIDs
defaults write com.apple.DiskUtility DUAllowsDiskImagesAsRAIDs -bool true

# Disk Skip Verify
defaults write com.apple.DiskUtility DURestoreCanSkipVerify -bool true

# Debug All Message Level
defaults write com.apple.DiskUtility DUDebugMessageLevel -int 4

# Show Details In First Aid
defaults write com.apple.DiskUtility DUShowDetailsInFirstAid -bool true

# Disable disk image verification
#defaults write com.apple.frameworks.diskimages skip-verify -bool true

#
# Software Updates
#

# Enable the WebKit Developer Tools in the Mac App Store
defaults write com.apple.appstore WebKitDeveloperExtras -bool true

# Enable Debug Menu in the Mac App Store
defaults write com.apple.appstore ShowDebugMenu -bool true

# Enable the automatic update check
defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

# Check for software updates daily, not just once per week
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# Download newly available updates in background
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

# Install System data files & security updates
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

# Turn on app auto-update
defaults write com.apple.commerce AutoUpdate -bool true

# Allow the App Store to reboot machine on macOS updates
defaults write com.apple.commerce AutoUpdateRestartRequired -bool true

#
# Security & Privacy
#

# Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

#
# Sharing and Secure Shell (SSH)
#

# Enable Remote Login
# Ref: https://osxdaily.com/2016/08/16/enable-ssh-mac-command-line/
sudo systemsetup -f -setremotelogin on

#
# Energy Saver
#

# Enable lid wakeup
sudo pmset -a lidwake 1

# Restart automatically on power loss
sudo pmset -a autorestart 1

# Restart automatically if the computer freezes
sudo systemsetup -setrestartfreeze on

# Sleep the display after 15 minutes
sudo pmset -a displaysleep 15

# Disable machine sleep while charging
sudo pmset -c sleep 0

# Set machine sleep to 5 minutes on battery
sudo pmset -b sleep 5

# Set standby delay 120 minutes before it enters sleep mode below 40% battery
# and for 300 minutes above that threshold
sudo pmset -a standbydelaylow 7200
sudo pmset -a highstandbythreshold 40
sudo pmset -a standbydelayhigh 18000

# Never go into computer sleep mode
#sudo systemsetup -setcomputersleep Off > /dev/null

#
# SSD Specific Tweaks
#

# Hibernation mode
# 0: Disable hibernation (speeds up entering sleep mode)
# 3: Copy RAM to disk so the system state can still be restored in case of a power failure
# (`pmset -g` terminal command will show what the hibernation mode is set to)
#sudo pmset -a hibernatemode 0

# Remove the sleep image file to save disk space
#sudo rm /private/var/vm/sleepimage

# Create a zero-byte file instead…
#sudo touch /private/var/vm/sleepimage

# …and make sure it can’t be rewritten
#sudo chflags uchg /private/var/vm/sleepimage

#
# Terminal
#

# Install SF Mono Font
if [[ ! -a "${DOTFILES_ROOT}/utils/opt/apple/fonts" ]]; then
  cp -R /System/Applications/Utilities/Terminal.app/Contents/Resources/Fonts/. /Library/Fonts/
fi

# Disable Secure Keyboard Entry in Terminal.app
# See: https://security.stackexchange.com/a/47786/8918
defaults write com.apple.Terminal SecureKeyboardEntry -bool false

# Only use UTF-8 in Terminal.app
defaults write com.apple.terminal StringEncodings -array 4

# Disable the annoying line marks
defaults write com.apple.Terminal ShowLineMarks -int 0

# New window opens in the same directory as the current WebKit2JavaScriptCanOpenWindowsAutomatically
#defaults write com.apple.Terminal NewWindowWorkingDirectoryBehavior -int 2

# Set Theme
osascript <<EOD
  tell application "Terminal"

    local allOpenedWindows
    local initialOpenedWindows
    local windowID
    set themeName to "Simple"

    (* Store the IDs of all the open terminal windows. *)
    set initialOpenedWindows to id of every window

    (* Open the custom theme so that it gets added to the list of available
    terminal themes (note: this will open two additional terminal windows). *)

    do shell script "open '${HOME}/Library/Mobile Documents/com~apple~CloudDocs/dotfiles/utils/opt/terminal/" & themeName & ".terminal'"

    (* Wait a little bit to ensure that the custom theme is added. *)
    delay 1

    (* Set the custom theme as the default terminal theme. *)
    set default settings to settings set themeName

    (* Get the IDs of all the currently opened terminal windows. *)
    set allOpenedWindows to id of every window

    repeat with windowID in allOpenedWindows

      (* Close the additional windows that were opened in order
      to add the custom theme to the list of terminal themes. *)

      if initialOpenedWindows does not contain windowID then
        close (every window whose id is windowID)

        (* Change the theme for the initial opened terminal windows to remove the
        need to close them in order for the custom theme to be applied. *)
      else
        set current settings of tabs of (every window whose id is windowID) to settings set themeName
      end if
    end repeat
  end tell
EOD

# Default Window
#defaults write com.apple.Terminal Shell -string ""
defaults write com.apple.Terminal "Default Window Settings" -string Simple
defaults write com.apple.Terminal "Startup Window Settings" -string Simple

# Focus follows Mouse
defaults write com.apple.Terminal FocusFollowsMouse -bool true

#
# Kill Affected Applications
#

for app in "Activity Monitor" \
  "Address Book" \
  "Calendar" \
  "cfprefsd" \
  "Contacts" \
  "Dock" \
  "Finder" \
  "Mail" \
  "Messages" \
  "Photos" \
  "Safari" \
  "Terminal" \
  "TextEdit" \
  "SystemUIServer"; do
  killall "${app}" &> /dev/null
done

# Restart Finder and Dock
killall Finder && rm ~/Library/Application\ Support/Dock/*.db && killall Dock
